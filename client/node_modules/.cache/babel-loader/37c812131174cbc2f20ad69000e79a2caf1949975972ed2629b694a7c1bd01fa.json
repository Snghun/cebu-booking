{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{loginUser,registerUser}from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const[isAdmin,setIsAdmin]=useState(false);const[loading,setLoading]=useState(true);useEffect(()=>{const token=localStorage.getItem('token');const userData=localStorage.getItem('user');if(token&&userData){try{const parsedUser=JSON.parse(userData);setUser(parsedUser);setIsAuthenticated(true);setIsAdmin(parsedUser.isAdmin||false);}catch(error){console.error('사용자 데이터 파싱 오류:',error);logout();}}setLoading(false);},[]);const login=async(email,password)=>{try{const response=await loginUser(email,password);const{token,user:userData}=response;localStorage.setItem('token',token);localStorage.setItem('user',JSON.stringify(userData));setUser(userData);setIsAuthenticated(true);setIsAdmin(userData.isAdmin||false);return response;}catch(error){throw error;}};const register=async(username,email,password)=>{try{const response=await registerUser(username,email,password);return response;}catch(error){throw error;}};const logout=()=>{localStorage.removeItem('token');localStorage.removeItem('user');setUser(null);setIsAuthenticated(false);setIsAdmin(false);};const value={user,isAuthenticated,isAdmin,loading,login,register,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","loginUser","registerUser","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","isAuthenticated","setIsAuthenticated","isAdmin","setIsAdmin","loading","setLoading","token","localStorage","getItem","userData","parsedUser","JSON","parse","error","console","logout","login","email","password","response","setItem","stringify","register","username","removeItem","value","Provider"],"sources":["C:/code/booking/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { loginUser, registerUser } from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const userData = localStorage.getItem('user');\r\n    \r\n    if (token && userData) {\r\n      try {\r\n        const parsedUser = JSON.parse(userData);\r\n        setUser(parsedUser);\r\n        setIsAuthenticated(true);\r\n        setIsAdmin(parsedUser.isAdmin || false);\r\n      } catch (error) {\r\n        console.error('사용자 데이터 파싱 오류:', error);\r\n        logout();\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await loginUser(email, password);\r\n      const { token, user: userData } = response;\r\n      \r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      \r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n      setIsAdmin(userData.isAdmin || false);\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (username, email, password) => {\r\n    try {\r\n      const response = await registerUser(username, email, password);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    setIsAdmin(false);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    isAdmin,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}