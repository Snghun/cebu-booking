{"ast":null,"code":"import axios from 'axios';\n\n// Netlify Functions API 기본 URL\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8888/.netlify/functions/api';\n\n// axios 인스턴스 생성\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 요청 인터셉터 (토큰 추가)\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 응답 인터셉터 (에러 처리)\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// 사용자 관련 API\nexport const userAPI = {\n  // 회원가입\n  register: userData => api.post('/users/register', userData),\n  // 로그인\n  login: credentials => api.post('/users/login', credentials),\n  // 사용자 목록 조회\n  getUsers: () => api.get('/users')\n};\n\n// 예약 관련 API\nexport const bookingAPI = {\n  // 예약 목록 조회\n  getBookings: () => api.get('/bookings'),\n  // 예약 생성\n  createBooking: bookingData => api.post('/bookings', bookingData),\n  // 예약 수정\n  updateBooking: (id, bookingData) => api.put(`/bookings/${id}`, bookingData),\n  // 예약 삭제\n  deleteBooking: id => api.delete(`/bookings/${id}`)\n};\n\n// 객실 관련 API\nexport const getRooms = async () => {\n  const response = await api.get('/rooms');\n  return response.data;\n};\n\n// 갤러리 관련 API\nexport const getGallery = async () => {\n  const response = await api.get('/gallery');\n  return response.data;\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","userAPI","register","userData","post","login","credentials","getUsers","get","bookingAPI","getBookings","createBooking","bookingData","updateBooking","id","put","deleteBooking","delete","getRooms","data","getGallery"],"sources":["C:/code/booking/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Netlify Functions API 기본 URL\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8888/.netlify/functions/api';\r\n\r\n// axios 인스턴스 생성\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// 요청 인터셉터 (토큰 추가)\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 응답 인터셉터 (에러 처리)\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 사용자 관련 API\r\nexport const userAPI = {\r\n  // 회원가입\r\n  register: (userData) => api.post('/users/register', userData),\r\n  \r\n  // 로그인\r\n  login: (credentials) => api.post('/users/login', credentials),\r\n  \r\n  // 사용자 목록 조회\r\n  getUsers: () => api.get('/users'),\r\n};\r\n\r\n// 예약 관련 API\r\nexport const bookingAPI = {\r\n  // 예약 목록 조회\r\n  getBookings: () => api.get('/bookings'),\r\n  \r\n  // 예약 생성\r\n  createBooking: (bookingData) => api.post('/bookings', bookingData),\r\n  \r\n  // 예약 수정\r\n  updateBooking: (id, bookingData) => api.put(`/bookings/${id}`, bookingData),\r\n  \r\n  // 예약 삭제\r\n  deleteBooking: (id) => api.delete(`/bookings/${id}`),\r\n};\r\n\r\n// 객실 관련 API\r\nexport const getRooms = async () => {\r\n  const response = await api.get('/rooms');\r\n  return response.data;\r\n};\r\n\r\n// 갤러리 관련 API\r\nexport const getGallery = async () => {\r\n  const response = await api.get('/gallery');\r\n  return response.data;\r\n};\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,8CAA8C;;AAEpG;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMU,OAAO,GAAG;EACrB;EACAC,QAAQ,EAAGC,QAAQ,IAAKxB,GAAG,CAACyB,IAAI,CAAC,iBAAiB,EAAED,QAAQ,CAAC;EAE7D;EACAE,KAAK,EAAGC,WAAW,IAAK3B,GAAG,CAACyB,IAAI,CAAC,cAAc,EAAEE,WAAW,CAAC;EAE7D;EACAC,QAAQ,EAAEA,CAAA,KAAM5B,GAAG,CAAC6B,GAAG,CAAC,QAAQ;AAClC,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG;EACxB;EACAC,WAAW,EAAEA,CAAA,KAAM/B,GAAG,CAAC6B,GAAG,CAAC,WAAW,CAAC;EAEvC;EACAG,aAAa,EAAGC,WAAW,IAAKjC,GAAG,CAACyB,IAAI,CAAC,WAAW,EAAEQ,WAAW,CAAC;EAElE;EACAC,aAAa,EAAEA,CAACC,EAAE,EAAEF,WAAW,KAAKjC,GAAG,CAACoC,GAAG,CAAC,aAAaD,EAAE,EAAE,EAAEF,WAAW,CAAC;EAE3E;EACAI,aAAa,EAAGF,EAAE,IAAKnC,GAAG,CAACsC,MAAM,CAAC,aAAaH,EAAE,EAAE;AACrD,CAAC;;AAED;AACA,OAAO,MAAMI,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMxB,QAAQ,GAAG,MAAMf,GAAG,CAAC6B,GAAG,CAAC,QAAQ,CAAC;EACxC,OAAOd,QAAQ,CAACyB,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAM1B,QAAQ,GAAG,MAAMf,GAAG,CAAC6B,GAAG,CAAC,UAAU,CAAC;EAC1C,OAAOd,QAAQ,CAACyB,IAAI;AACtB,CAAC;AAED,eAAexC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}